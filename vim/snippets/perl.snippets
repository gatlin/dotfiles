# #!/usr/bin/env perl
snippet #!
	#!/usr/bin/env perl
	
	use v5.${1:16};
	use warnings;
	${2}
# Hash Pointer
snippet ,
	=> ${1},
snippet .
	->${1}
snippet my
	my (${1}) = ${2};
	${3}
# Function
snippet sub
	sub ${1}{
	    ${2:...}
	}
# Conditional
snippet if
	if (${1}) {
	    ${2:...}
	}
# elsif
snippet elsif
	elsif (${1}) {
	    ${2:...}
	}
# else
snippet else
	else {
		${1:...}
	}
# Unless conditional
snippet unless
	unless (${1}) {
		${2:...}
	}
# Try/Except
snippet eval
	eval {
		${1:...}
	};
	if ($@) {
		${2:...}
	}
# While Loop
snippet while
	while (${1:<>}) {
		${2:...}
	}
# For Loop
snippet for
	for ${1}(${2:@_}) {
		${3:...}
	}
# Package
snippet pkg
	package ${1:Package};
	${2}
	
	1;
	
snippet new
	sub new {
		my ($class${1}) = @_;
		bless {
			${2}
		}, $class;
	}
snippet use
	use ${1:Data::Dump} qw(${2:pp});
# Read File
snippet slurp
	do {local $/; open my $f, '<', "${1:file}"; <$f>}${2}
# Begin block
snippet begin
	BEGIN {
		${1:...}
	}
snippet @{
	@{${1}}${2}
snippet @{{
	@{${1}}{qw(${2})}${3}

# map
snippet map
	map { ${2:...} } ${1:@_};

# Pod stub
snippet ppod
	=head1 NAME
	
	${1:name} - ${2:short description}
	
	=head1 SYNOPSIS
	
	    use $1;
	
	    ${3:# synopsis...}
	
	=head1 DESCRIPTION
	
	${4:# longer description...}

# Heading for a subroutine stub
snippet psub
	=head2 ${1:name}
	
	${2:description}

# Heading for inline subroutine pod
snippet psubi
	=head2 ${1:name}
	
	${2:description}
	
	=cut

# use test classes
snippet tests
	use Test::More tests => ${1:0};
	${2}

# cause failures to print stack trace
snippet carpbug
	use Carp qw(verbose);
	$SIG{'__DIE__'} = sub {
		require Carp; Carp::confess
	};

